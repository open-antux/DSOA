#!/usr/bin/bash

# Simple script to clean Arch filesystem automatically
# 
# Exit code:
# 0: Run successfully
# 1: Stopped script
# 2: Unexpected error

# Shitty directories
shittyDirectory=(
  '~/.adobe'
  '~/.macromedia'
  '~/.recently-used'
  '~/.local/share/recently-used.xbel'
  '~/Desktop'
  '~/.thumbnails'
  '~/.gconfd'
  '~/.gconf'
  '~/.local/share/gegl-0.2'
  '~/.FRD/log/app.log'   
  '~/.FRD/links.txt'
  '~/.objectdb'
  '~/.gstreamer-0.10'
  '~/.pulse'
  '~/.esd_auth'
  '~/.config/enchant'
  '~/.spicec'
  '~/.dropbox-dist'
  '~/.parallel'
  '~/.dbus'
  '~/ca2'
  '~/ca2~'
  '~/.distlib/'
  '.bazaar/'
  '~/.bzr.log'
  '~/.nv/'
  '~/.viminfo'
  '~/.npm/'
  '~/.java/'
  '~/.oracle_jre_usage/'
  '~/.jssc/'
  '~/.tox/'
  '~/.pylint.d/'
  '~/.qute_test/'
  '~/.QtWebEngineProcess/'
  '~/.qutebrowser/'
  '~/.asy/'
  '~/.cmake/'
  '~/.gnome/'
  '~/unison.log'
  '~/.texlive/'
  '~/.w3m/'
  '~/.subversion/'
  '~/nvvp_workspace/'
  '~/.ansible/'
  '~/.fltk/'
  '~/.vnc/'
)

# Colors
BLACK='\033[0;30m'
RED='\033[1;31m'
GREEN='\033[1;32m'
ORANGE='\033[1;33m'
BLUE='\033[1;34m'
PURPLE='\033[1;35m'
YELLOW='\033[1;33m'
WHITE='\033[1;37m'
NULL='\033[0;m'

# Function to remove old packages
function rm_pac_cache() {
  if which paccache > /dev/null; then # Check if exist paccache
    sudo paccache -r 
  else
    echo -e "${RED}Error: paccache doesn't exist${NULL}"
    exit 2
  fi
}

# Function to remove orphaned packages
function rm_orphaned_package() {
  sudo pacman -Rns $(pacman -Qtdq) 
}

# Function to remove shitty directories
function clean_home_dir() {
  cd ${HOME} # Change directory into your home

  homeFile=$(ls -la | awk '{print $9}') # List all file in the current directory
  
  for file in ${shittyDirectory[@]}; do
    # Check if a directory in one of the listed in shittyDirectory
    if [[ "$(echo ${homeFile} | grep ${file})" != "" ]]; then 
      rmhomeFile+="${file} "
    fi
  done

  if [[ "${rmhomeFile}" != "" ]]; then 
    echo -e "${GREEN}Found some shitty directory:${NULL}"
    echo ${rmhomeFile}
    read -p "Do you want delete all [y/n]? " ans

    if [[ "${ans}" == "y" ]]; then
      for file in ${rmhomeFile[@]}; do
        rm -r ${file} # Delete all the shitty directories
      done
    fi

  else
    echo -e "${ORANGE}Not shitty directory found${NULL}"
  fi
}

# Function to remove broken symlink
function rm_broken_symlink() {
  echo -e "${GREEN}Scanning filesystem, it could take a while...${NULL}"

  # Scanning all broken symlink
  brokenSymlink=( $(find / -xtype l -exec sh -c 'file -b "$1" | grep -q ^broken' sh {} \; -print 2> /dev/null) )
  
  echo "There are ${#brokenSymlink[@]} broken symlink"

  if [[ "${#brokenSymlink[@]}" != "0" ]]; then # Check if there are broken symlink
    echo -e "${YELLOW}WARNING${WHITE}: You should not blindly delete all broken \
symbolic links, as some of them serve a purpose!${NULL}"

    read -p "Do you want to continue [y/n]? " ans

    if [[ "${ans}" == "y" ]]; then
      for file in ${brokenSymlink[@]}; do
        rm ${file} 2> /dev/null # Delete broken symlink
      done
    fi
  fi
}

# Main
function main() {
  echo "Removing old packages in /var/cache/pacman/pkg/"
  read -p "Press any key to continue..."
  rm_pac_cache

  echo -e "\nRemoving orphaned packages"
  read -p "Press any key to continue..."
  rm_orphaned_package

  echo -e "\nRemoving shitty directory in ${HOME}"
  read -p "Press any key to continue..."
  clean_home_dir
  
  echo -e "\nRemoving broken symlink"
  read -p "Press any key to continue..."
  rm_broken_symlink
}

if [[ "$(groups)" != "root" ]]; then
  main
else
  echo -e "${RED}You shouldn't run this script as root${NULL}"
  read -p "Continue [y/n]? " ans

  if [[ "${ans}" == "y" ]]; then
    main
  else
    exit 1
  fi
fi
